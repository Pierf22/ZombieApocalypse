Index: src/main/java/ZombieApocalypse/View/GraphicPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ZombieApocalypse.View;\r\n\r\nimport ZombieApocalypse.Model.Game;\r\nimport ZombieApocalypse.Model.World;\r\nimport ZombieApocalypse.ResourcesLoader;\r\nimport ZombieApocalypse.Settings;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.io.IOException;\r\n\r\npublic class GraphicPanel extends JPanel {\r\n    //Disegna il mondo\r\n    private final CharacterView characterView = new CharacterView();\r\n    private static final GunView gunView = new GunView();\r\n    public  GunView getGunView(){\r\n        return gunView;\r\n    }\r\n    //immagini ordinate fino ad adesso\r\n    private final int numeroImmagini=1;\r\n    private final Image[] images=new Image[numeroImmagini];\r\n    public GraphicPanel()  {\r\n            for(int i=0; i<numeroImmagini; i++){\r\n                String c=String.valueOf(i);\r\n                String path=\"/AmbienteDiGioco/Terreno/Terreno\"+c+\".png\";\r\n                images[i]= ResourcesLoader.getInstance().getImage(path, Settings.CELL_SIZEX, Settings.CELL_SIZEY, true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n        World world=new World();\r\n        for(int i = 0; i < world.getSize(); i++) {\r\n            int x = i * Settings.CELL_SIZEX;\r\n            for(int j = 0; j < world.getSize(); j++) {\r\n                int y = j * Settings.CELL_SIZEY;\r\n                if(world.isGround0(i, j)) {\r\n                    //Random random=new Random();\r\n                    //int value= random.nextInt(numeroImmagini);\r\n                    g.drawImage(images[0], x, y, null);\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n        g.drawImage(gunView.getCurrentImage(), gunView.imagePosition.x, gunView.imagePosition.y, gunView.width, gunView.height, null);\r\n        g.drawImage(characterView.getCurrentImage(), Game.getInstance().getPlayerCharacter().getX(), Game.getInstance().getPlayerCharacter().getY(), characterView.width, characterView.height, null);\r\n\r\n    }\r\n    public void update() {\r\n        characterView.update();\r\n        gunView.update(new Point(2,2));\r\n\r\n        repaint();\r\n    }}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ZombieApocalypse/View/GraphicPanel.java b/src/main/java/ZombieApocalypse/View/GraphicPanel.java
--- a/src/main/java/ZombieApocalypse/View/GraphicPanel.java	(revision ac3f962475dad2c393c033c58ad281b7ed4438fd)
+++ b/src/main/java/ZombieApocalypse/View/GraphicPanel.java	(date 1684689627611)
@@ -8,7 +8,16 @@
 import javax.imageio.ImageIO;
 import javax.swing.*;
 import java.awt.*;
+import java.awt.font.GlyphVector;
+import java.awt.geom.AffineTransform;
+import java.awt.image.BufferedImage;
+import java.awt.image.BufferedImageOp;
+import java.awt.image.ImageObserver;
+import java.awt.image.RenderedImage;
+import java.awt.image.renderable.RenderableImage;
 import java.io.IOException;
+import java.text.AttributedCharacterIterator;
+import java.util.Map;
 
 public class GraphicPanel extends JPanel {
     //Disegna il mondo
@@ -48,6 +57,7 @@
 
 
         }
+
         g.drawImage(gunView.getCurrentImage(), gunView.imagePosition.x, gunView.imagePosition.y, gunView.width, gunView.height, null);
         g.drawImage(characterView.getCurrentImage(), Game.getInstance().getPlayerCharacter().getX(), Game.getInstance().getPlayerCharacter().getY(), characterView.width, characterView.height, null);
 
