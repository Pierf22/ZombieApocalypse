Index: src/main/java/ZombieApocalypse/Model/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ZombieApocalypse.Model;\r\n\r\nimport ZombieApocalypse.View.GameFrame;\r\nimport ZombieApocalypse.View.MenuBarView;\r\n\r\nimport java.awt.*;\r\n\r\npublic class Game {\r\n    //Gestisce gli aspetti del gioco\r\n    private final World world = new World();\r\n    private final PlayerCharacter character = new PlayerCharacter();\r\n\r\n    private static final Game instance = new Game();\r\n    private Game() {\r\n    }\r\n    public static Game getInstance() {\r\n        return instance;\r\n    }\r\n\r\n    public void startMovementRight() {\r\n        character.startMovementRight();}\r\n    public void startMovementUp() {\r\n        character.startMovementUp();\r\n\r\n    }\r\n\r\n    public void startMovementDown() {\r\n        character.startMovementDown();\r\n    }\r\n    public void startMovementLeft() {\r\n        character.startMovementLeft();\r\n    }\r\n\r\n    public void stopMovement() {\r\n        character.stopMovement();\r\n    }\r\n\r\n\r\n    //Da fare nel Game Loop\r\n    public void update() {\r\n        if(character.isMoving())\r\n            character.move();}\r\n\r\n\r\n\r\n    public PlayerCharacter getPlayerCharacter() {\r\n        return character;}\r\n    public int getPlayerLife() {\r\n        return character.health;}\r\n    public int getPlayerMaxLife() {\r\n        return character.getPlayerMaxHealth();}\r\n\r\n    public PlayerCharacter.movementDirection getPlayerDirection() {\r\n        return character.dir;}\r\n\r\n    public void closeGame() {\r\n        GameFrame.close();\r\n    }\r\n\r\n\r\n\r\n\r\n    public void updateTime(long start) {\r\n        long timeElapsed=System.nanoTime()-start;\r\n        long t=timeElapsed/1000000000;\r\n        MenuBarView.updateTimeLable(t);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ZombieApocalypse/Model/Game.java b/src/main/java/ZombieApocalypse/Model/Game.java
--- a/src/main/java/ZombieApocalypse/Model/Game.java	(revision f6c484904dbd8956c08740bdea784706f9b1d4e5)
+++ b/src/main/java/ZombieApocalypse/Model/Game.java	(date 1684836598517)
@@ -45,6 +45,8 @@
 
     public PlayerCharacter getPlayerCharacter() {
         return character;}
+
+
     public int getPlayerLife() {
         return character.health;}
     public int getPlayerMaxLife() {
@@ -67,4 +69,7 @@
     }
 
 
+    public void attack() {
+
+    }
 }
Index: src/main/java/ZombieApocalypse/Model/PlayerCharacter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ZombieApocalypse.Model;\r\n\r\nimport ZombieApocalypse.View.MenuBarView;\r\n\r\n\r\npublic class PlayerCharacter {\r\n    //Gestisce il player e i suoi movimenti\r\n    private int x = 20;\r\n    private int y = 20;\r\n    private final int playerMaxHealth=6;\r\n    int getPlayerMaxHealth(){\r\n        return playerMaxHealth;\r\n    }\r\n\r\n\r\n    private boolean sound=false;\r\n    int money=0;\r\n    int health=5;\r\n    boolean movement = false;\r\n    boolean hit=false;\r\n    private final World world=new World();\r\n    public enum movementDirection{RIGHT, LEFT, UP, DOWN};\r\n    movementDirection dir;\r\n\r\n    Audio audio = new Audio();\r\n\r\n    // Metodo usato per musica in loop, riceve come argomento index da array Audio e lo passa a SetFile\r\n    public void playMusic(int i) {\r\n\r\n        audio.setFile(i);\r\n        audio.play();\r\n        audio.loop();\r\n    }\r\n    public void stopMusic() {\r\n        audio.stop();\r\n    }\r\n    // Metodo usato per i sound effects\r\n    public void playSE(int i) {\r\n        audio.setFile(i);\r\n        audio.play();\r\n    }\r\n\r\n\r\n\r\n    void startMovementUp() {\r\n        movement = true;\r\n        dir=movementDirection.UP;\r\n    }\r\n    void startMovementDown() {\r\n        movement = true;\r\n        dir=movementDirection.DOWN;\r\n    }\r\n    void startMovementRight() {\r\n        movement = true;\r\n        dir=movementDirection.RIGHT;\r\n    }\r\n    void startMovementLeft() {\r\n        movement = true;\r\n        dir=movementDirection.LEFT;\r\n    }\r\n\r\n    void stopMovement() {\r\n        movement = false;\r\n    }\r\n\r\n    public boolean isMoving() {\r\n        return movement;\r\n    }\r\n    public boolean getHit() {\r\n        return hit;\r\n    }\r\n    public void stopHit() {\r\n        hit=false;\r\n    }\r\n\r\n\r\n    public void hit(){\r\n        health--;\r\n\r\n        MenuBarView.lifeUpdate(false);\r\n\r\n    }\r\n    public void cure(){\r\n        health++;\r\n        MenuBarView.lifeUpdate(true);\r\n    }\r\n\r\n\r\n    public void move() {\r\n        if(dir==movementDirection.RIGHT && world.isValidCoordinate(getX()+10, getY()))\r\n            x += 10;\r\n        else if(dir==movementDirection.LEFT && world.isValidCoordinate(getX()-10, getY()))\r\n            x -= 10;\r\n        else if(dir==movementDirection.UP && world.isValidCoordinate(getX(), getY()-10))\r\n            y -= 10;\r\n        else if(dir==movementDirection.DOWN && world.isValidCoordinate(getX(), getY()+10))\r\n            y += 10;\r\n        else\r\n            movement=false;\r\n        if(sound){\r\n            playSE(0);\r\n            sound=false;}\r\n        else\r\n            sound=true;\r\n\r\n\r\n\r\n    }\r\n\r\n    public int getX() {\r\n        return x;\r\n    }\r\n\r\n    public int getY() {\r\n        return y;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ZombieApocalypse/Model/PlayerCharacter.java b/src/main/java/ZombieApocalypse/Model/PlayerCharacter.java
--- a/src/main/java/ZombieApocalypse/Model/PlayerCharacter.java	(revision f6c484904dbd8956c08740bdea784706f9b1d4e5)
+++ b/src/main/java/ZombieApocalypse/Model/PlayerCharacter.java	(date 1684835741637)
@@ -15,7 +15,7 @@
 
     private boolean sound=false;
     int money=0;
-    int health=5;
+    int health=6;
     boolean movement = false;
     boolean hit=false;
     private final World world=new World();
Index: src/main/java/ZombieApocalypse/View/GunView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ZombieApocalypse.View;\r\n\r\nimport ZombieApocalypse.Loop.TimeLoop;\r\nimport ZombieApocalypse.Model.Game;\r\nimport ZombieApocalypse.ResourcesLoader;\r\nimport ZombieApocalypse.Settings;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.awt.image.ImageObserver;\r\nimport java.awt.image.ImageProducer;\r\n\r\npublic class GunView {\r\n    private final GunAnimation gunAnimation;\r\n    int width=Settings.CELL_SIZEX;\r\n    int height=Settings.CELL_SIZEY/2;\r\n    int radius=Settings.CELL_SIZEY;\r\n    int centerX = width / 2;\r\n    int centerY = height / 2;\r\n    int xPosy=width+10;\r\n    int yPosy=height-5;\r\n     public Point imagePosition;\r\n\r\n    public Image currentImage;\r\n\r\n    public GunView() {\r\n        gunAnimation= new GunAnimation(\"Coltello\", 4);\r\n    }\r\n    double angle=0;\r\n    public void update(Point point) {\r\n        if(point==null){\r\n            imagePosition = new Point(Game.getInstance().getPlayerCharacter().getX()+xPosy-20, Game.getInstance().getPlayerCharacter().getY()+yPosy);\r\n            currentImage=gunAnimation.update(angle);\r\n            return;\r\n        }\r\n\r\n        float xDistance = point.x - Game.getInstance().getPlayerCharacter().getX()-20;   //Distanza punto x\r\n        float yDistance = point.y - Game.getInstance().getPlayerCharacter().getY();     //Distanza punto y\r\n        //Questo metodo converte le coordinate rettangolari (x,y) in coordinate polari (r,theta) e ritorna theta\r\n        angle = -Math.toDegrees(Math.atan2(yDistance, xDistance));\r\n        //Le coordinate sotto lo zero diventano negative, a noi ci servono sempre positive\r\n        if(angle<0)\r\n            angle=angle+360;\r\n\r\n\r\n\r\n\r\n        double rads=Math.toRadians(angle-180);  //transformo angolo in radianti\r\n        //Calcolo il raggio del cerchio\r\n        //il radius(diametro) è l'altezza del personaggio\r\n        // radius/2f significa dividi per 2 transformandolo in float\r\n        int fullLength=Math.round((radius/2f))-width-10;\r\n        //Calcolo della nuova poszione dell'arma\r\n        xPosy = Math.round((float) (centerX + Math.cos(rads) * fullLength));\r\n        yPosy = Math.round((float) (centerY - Math.sin(rads) * fullLength));\r\n\r\n\r\n        //Aggiorno immagine\r\n        currentImage=gunAnimation.update(angle);\r\n        //Aggiorno posizione\r\n        imagePosition = new Point(Game.getInstance().getPlayerCharacter().getX()+xPosy-20, Game.getInstance().getPlayerCharacter().getY()+yPosy);\r\n\r\n\r\n    }\r\n    //Ho bisogno di sapere se l'arma è in verticale o in orizzondale\r\n    //Perchè wight e height si invertono nel Graphic Panel\r\n    public boolean isUp(){\r\n        if((angle<60 && angle>=0) || (angle>=320)){\r\n            return false;\r\n        }\r\n        if(angle<140 && angle>=60){\r\n            return true;\r\n\r\n        }\r\n        if(angle<230 && angle>=140){\r\n            return false;\r\n\r\n        }\r\n\r\n\r\n         return true;\r\n    }\r\n\r\n    public Image getCurrentImage() {\r\n        return currentImage;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ZombieApocalypse/View/GunView.java b/src/main/java/ZombieApocalypse/View/GunView.java
--- a/src/main/java/ZombieApocalypse/View/GunView.java	(revision f6c484904dbd8956c08740bdea784706f9b1d4e5)
+++ b/src/main/java/ZombieApocalypse/View/GunView.java	(date 1684835467489)
@@ -77,10 +77,10 @@
 
         }
 
-
          return true;
     }
 
+
     public Image getCurrentImage() {
         return currentImage;
     }
Index: src/main/java/ZombieApocalypse/Controller/PlayerController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ZombieApocalypse.Controller;\r\nimport ZombieApocalypse.Model.Game;\r\nimport ZombieApocalypse.View.GraphicPanel;\r\n\r\nimport java.awt.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.awt.event.KeyListener;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.event.MouseMotionListener;\r\n\r\npublic class PlayerController implements KeyListener, MouseMotionListener {\r\n    //Gestisce i movimenti del player\r\n\r\n    private final GraphicPanel panel;\r\n\r\n    public PlayerController(GraphicPanel panel) {\r\n        this.panel = panel;\r\n    }\r\n\r\n    @Override\r\n    public void keyPressed(KeyEvent e) {\r\n        switch (e.getKeyCode()) {\r\n            case KeyEvent.VK_UP  -> Game.getInstance().startMovementUp();\r\n            case KeyEvent.VK_RIGHT -> Game.getInstance().startMovementRight();\r\n            case KeyEvent.VK_LEFT -> Game.getInstance().startMovementLeft();\r\n            case KeyEvent.VK_DOWN -> Game.getInstance().startMovementDown();\r\n\r\n            case KeyEvent.VK_Q -> Game.getInstance().closeGame();\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {}\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n        if(e.getKeyCode() == KeyEvent.VK_RIGHT ||e.getKeyCode() == KeyEvent.VK_LEFT || e.getKeyCode()==KeyEvent.VK_DOWN || e.getKeyCode()==KeyEvent.VK_UP ||e.getKeyCode()==KeyEvent.VK_W || e.getKeyCode()==KeyEvent.VK_S || e.getKeyCode()==KeyEvent.VK_D || e.getKeyCode()==KeyEvent.VK_A)\r\n            Game.getInstance().stopMovement();\r\n    }\r\n\r\n    public void update() {\r\n        Game.getInstance().update();\r\n        panel.update();\r\n    }\r\n\r\n    @Override\r\n    public void mouseDragged(MouseEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void mouseMoved(MouseEvent e) {\r\n        panel.getGunView().update(e.getPoint());\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ZombieApocalypse/Controller/PlayerController.java b/src/main/java/ZombieApocalypse/Controller/PlayerController.java
--- a/src/main/java/ZombieApocalypse/Controller/PlayerController.java	(revision f6c484904dbd8956c08740bdea784706f9b1d4e5)
+++ b/src/main/java/ZombieApocalypse/Controller/PlayerController.java	(date 1684835467467)
@@ -25,6 +25,8 @@
             case KeyEvent.VK_LEFT -> Game.getInstance().startMovementLeft();
             case KeyEvent.VK_DOWN -> Game.getInstance().startMovementDown();
 
+            case KeyEvent.VK_SPACE -> Game.getInstance().attack();
+
             case KeyEvent.VK_Q -> Game.getInstance().closeGame();
 
         }
